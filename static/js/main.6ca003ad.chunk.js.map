{"version":3,"sources":["components/NavBar/index.js","pages/Home.js","pages/Contact.js","components/ProjectItem/index.js","utils/GlobalState.js","pages/Portfolio.js","components/Footer/index.js","App.js","serviceWorker.js","index.js"],"names":["NavBar","className","to","type","data-toggle","data-target","aria-controls","aria-expanded","aria-label","id","URL","Home","src","alt","Contact","placeholder","rows","ProjectItem","project","console","log","thumbnail","name","description","href","repository","deployed","StoreContext","createContext","Provider","reducer","state","action","projects","StoreProvider","props","useReducer","dispatch","value","Portfolio","useContext","map","o","key","Footer","App","process","exact","path","component","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.6ca003ad.chunk.js","sourcesContent":["import React from 'react';\nimport { Link } from 'react-router-dom';\nconst URL = process.env.PUBLIC_URL;\n\nfunction NavBar () {\n    return(\n        <nav className=\"navbar navbar-expand-sm navbar-dark bg-dark\">\n          <Link className=\"navbar-brand\" to=\"/\">Charlie</Link>\n          <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarNav\" aria-controls=\"navbarNav\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n            <span className=\"navbar-toggler-icon\"></span>\n          </button>\n          <div className=\"collapse navbar-collapse flex-row-reverse align-content-sm-center\" id=\"navbarNav\">\n            <ul className=\"navbar-nav\">\n              <li className=\"nav-item\">\n                \n                <Link className=\"nav-link\" to={URL + \"/\"}>Home <span className=\"sr-only\">(current)</span></Link>\n              </li>\n              <li className=\"nav-item\">\n                  <Link className=\"nav-link\" to={URL + \"/portfolio\"}>Portfolio</Link>\n                </li>\n              <li className=\"nav-item\">\n                <Link className=\"nav-link\" to={URL + \"/contact\"}>Contact</Link>\n              </li>\n            </ul>\n          </div>\n        </nav>\n      );\n};\nexport default NavBar;","import React from 'react';\n\nfunction Home (){\n    return(\n\t\t\t<div className='container-sm'>\n\t\t\t\t<div className='row'>\n\t\t\t\t\t\t<div className='col-auto'>\n\t\t\t\t\t\t\t\t<h1 className='text-center'>About Me</h1>\n\t\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t\t<div className='row'>\n\t\t\t\t\t\t<div className='col-sm text-center'>\n\t\t\t\t\t\t\t<img src='' alt='Me' />\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div className='col-sm'>\n\t\t\t\t\t\t\t\t<p>\n\t\t\t\t\t\t\t\t\t\t'I am just a traveler searching for purity.'  That is a quote from the man pictured on this page, Thomas Moore, in the movie the Saint.\n\t\t\t\t\t\t\t\t\t\tThis is one of Val Kilmer's best roles in my opinion.  Although I suspect this page is intended to be a platform to actually add my projects\n\t\t\t\t\t\t\t\t\t\tin the future, I think I need a lot more practice in the 'markup' area.  I should have allowed myself more time to work on this homework- a \n\t\t\t\t\t\t\t\t\t\tmistake I will not make again.  I am not really sure what else I should be writing here.\n\t\t\t\t\t\t\t\t</p>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div className='col-lg-auto'></div>\n\t\t\t\t</div>\n\t\t\t</div> \n    );\n};\nexport default Home;","import React from 'react';\r\n\r\nfunction Contact (){\r\n    return(\r\n\t\t\t<div>\r\n\t\t\t\t<div className=\"container\">\r\n\t\t\t\t\t<div className=\"row-align-items-left\">\r\n\t\t\t\t\t\t<div className=\"col-sm-8\">\r\n\t\t\t\t\t\t<form>\r\n\t\t\t\t\t\t\t<div className=\"form-group\">\r\n\t\t\t\t\t\t\t\t<label>Name</label>\r\n\t\t\t\t\t\t\t\t<input type=\"name\" className=\"form-control\" id=\"exampleFormControlInput1\" placeholder=\"Jeremy\" />\r\n              </div>              \r\n\t\t\t\t\t\t\t<div className=\"form-group\">\r\n\t\t\t\t\t\t\t\t<label>Email address</label>\r\n\t\t\t\t\t\t\t\t<input type=\"email\" className=\"form-control\" id=\"exampleFormControlInput1\" placeholder=\"name@example.com\" />\r\n\t\t\t\t\t\t\t</div>              \r\n\t\t\t\t\t\t\t<div className=\"form-group\">\r\n\t\t\t\t\t\t\t\t<label>Message</label>\r\n\t\t\t\t\t\t\t\t<textarea className=\"form-control\" id=\"exampleFormControlTextarea1\" rows=\"7\"></textarea>\r\n\t\t\t\t\t\t\t</div>\r\n            </form>\r\n            </div>\t\t\t\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\t\r\n\t\t\t</div>\r\n        \r\n    );\r\n};\r\nexport default Contact;","import React from 'react';\nimport './style.css';\nfunction ProjectItem ({ project }) {\n\n  console.log('proj ', project);\n  return (\n    <div className='card mb-3'>\n      <div className='row'>\n        <div className='col-md-4'>\n          <img src={project.thumbnail} className='card-img' alt='jeremiah' />\n        </div>\n        <div className='col-md-8'>\n          <div className='card-body'>\n            <h5 className='card-title'>{project.name}</h5>\n            <p className='card-text'>{project.description}</p>\n            <small><a href={project.repository} className='left'>Github</a></small>\n            <small><a href={project.deployed} className='right'>Deployed App</a></small>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\nexport default ProjectItem;","import React, { createContext, useReducer, useContext } from 'react';\nimport projects from './projects.json';\n\nconst StoreContext = createContext();\nconst { Provider } = StoreContext;\n\nconst reducer = (state, action) => {\n  switch (action.type) {\n    case 'getall':\n      return {\n        ...state,\n        projects\n      }\n    default:\n      return state\n  }\n};\n\nconst StoreProvider = ({ ...props }) => {\n  const [state, dispatch] = useReducer(reducer, {\n    projects: projects\n  });\n  return <Provider value={[state, dispatch]} {...props} />;\n};\n\nconst useStoreContext = () => useContext(StoreContext);\n\nexport { StoreProvider, useStoreContext };","import React from 'react';\nimport ProjectItem from '../components/ProjectItem';\n// import projects from '../utils/projects.json';\nimport { useStoreContext } from \"../utils/GlobalState\";\nfunction Portfolio (){\n\t// console.log('projects ', projects);\n\tconst [state] = useStoreContext();\n\n\tconsole.log('state ', state);\n\treturn(\n\t\t<div>\n\t\t\t<h1>Portfolio</h1>\n\t\t\t{state.projects.map(o => (\n\t\t\t\t<ProjectItem key={o.id} project={o} />\t\n\t\t\t))}\n\t\t</div>\n\t);\n};\nexport default Portfolio;","import React from 'react';\n\nfunction Footer (){\n  return(\n    <footer className='page-footer font-small fixed-bottom'>\n      <div className='container-fluid text-center'>\n        <div className='row'>\n          <div className='col'>\n            <a href='https://github.com/cbrittingham14'>See my github</a>\n          </div>\n        </div>\n      </div>\n    </footer>\n  );\n};\nexport default Footer;","import React from 'react';\n// import logo from './logo.svg';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\nimport './App.css';\nimport NavBar from './components/NavBar';\nimport Home from './pages/Home';\nimport Contact from './pages/Contact';\nimport Portfolio from './pages/Portfolio';\nimport Footer from './components/Footer';\nimport { StoreProvider } from './utils/GlobalState';\nconst URL = process.env.PUBLIC_URL; //for use on gh pages\n\nfunction App() {\n  console.log('URL ', URL);\n  console.log('process.env ', process.env);\n  return (\n    <Router>\n      <div>\n        <StoreProvider>\n          <NavBar />\n          <Switch>\n            <Route exact path= {URL + '/'} component={Home} />\n            <Route exact path= {URL + '/contact'} component={Contact} />\n            <Route exact path= {URL + '/portfolio'} component={Portfolio} />\n          </Switch>\n          <Footer />\n        </StoreProvider>\n      </div>\n    </Router>\n  );\n};\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}